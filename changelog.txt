V0.1.0 (03.06.2023)
- initial version
- works for ATtinyX4 only on the target side
- on the server side, only an Arduino UNO has been tested
- library should work for all supported chips.

V0.2.0 (03.06.2023)
- added check in calibTarget for stopping at the OSCCAL boundaries
- added a check for progress when changing OSCCAL value; if none (probably an XTAL), we stop
- added ATTinyX5, ATtinyX61, and ATtiny1634
- taking always 3 measurements and selecting median (still problems)

V0.3.0 (22.06.23)
- using now stripped down I/O instead of TXOnlySerial (and saved 600
bytes)

V0.4.0 (23.06.2023)
- switch to non-IRQ mode
- corrected intref computation
- minimized everything so that 2KByte MCUs can use the sketch (when
  millis are disabled)
- exchanged MOSI and SCK
- use MISO if chip does not have SPI, otherwise MOSI (this is a bit
  confusing) -> this fixed the unreliability problem (guess why)
  
V0.5.0 (23.06.2023)
- check one additional OSCCAL value after crossing the treshold
  because of pseudo-monotonicity
- changed FRQPIN in calibTarget to INPUT_PULLUP and set PUSHPULL in
  calibServer to false, i.e. , it is now open collector
- use now MOSI and MISO, since SCK is used for the LED_BUILTIN on the
  UNO
- changed to 10 Hz
- tweaked outputs so that it can run on 2K MCUs (less wordy, though),
  and one needs to disable the millis interrupt

V0.5.1 (24.06.2023)
- adapted documentation

V0.5.2 (25.06.2023)
- thrown out the 4e additional voltage measurements
- added back to use 1000 measurements for computing modified intref
- added t87/t167
- changed digital filter for determining edge back to use 3
  consecutive measurements
- use 10000 measurements to determine initial voltage before
  calibration

V0.5.3 (25.06.2023)
- added t441/t841
- added t48/t88
- added t828
- added t26
- changed back to 1000 measurements, but added a comment in the readme
  that one should wait for a minute until the operating temperature
  has stabilized or to run calibration until the values stabilize
- changed EEPROM layout: E2END-3..E2END-2: intref value, E2END-1: 0 when
  OSCCAL value is valid, E2END: OSCCAL value
- changed from using the EEPROM class to using the AVR library
  functions, which saves roughly 100 bytes (necessary for the 2K byte MCUs).
- calibServer: changed checks on processor to checks on board instead

V0.5.4 (25.06.2023)
- fixed init method (legal values and EEPROM layout)
- added ATmegaX8(P)(A/B)
- added ATmegaX4(P)
- added ATmega16, 32, 8535
- added Pro Mini, Nano, and Mega(2560) as server boards

V0.6.0 (27.07.2023)
- rearranged connections again
- added a signal line that has to go low before the target sketch
  starts to calibrate; otherwise the calibration was overriden the
  next time the board was connected to power
- DEFAULT_INTREF (instead of DEFINTREF) is now a global constant in
  Vcc
- new example sketch: simple (10 seconds without calibration, then
  calibrate)
- blocked "negative" chars in server sketch

V0.6.1 (27.07.2023)
- added license (MIT)
- fixed typos in readme
- new workflows

V0.6.2 (27.07.2023)
- fixed problem in init for ATtinyX313

V0.6.3 (27.07.2023)
- fixed problem in setup_* for ATtinyX313 (never call Vcc:measure!)
- fixed problem in setup_* for all MCUs using OSCCAL0
- fixed the same problem in avrCalibrate.cpp
- added ATmega8(A)
- added ATmega16, 32 & 8535

V1.0.0 (27.06.2023)
- first public release

V1.0.1  (27.06.2023)
- moved utility folder to extras in order to be compliant with the
  Arduino library rules

V1.1.0 (30.06.2023)
- added ATtiny13 (with a really stripped down output and no error
  checking)

V1.1.1 (30.06.2023)
- had to add ATtiny13 conditionals in the init function in order to avoid getting an error from the
  Vcc library
- and it had to be added to avrCalibrate.h as well (sigh)

V1.1.2 (30.06.2023)
- added some error detection for ATiny13 calibration
- added a trouble shooting section to the readme

V1.1.3 (01.07.2023)
- fixed the value of MAXOSCCAL

